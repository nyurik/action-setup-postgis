name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 8 * * SUN"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  default:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # Linux
          - ubuntu-24.04
          - ubuntu-22.04
          # Linux - ARM
          - ubuntu-24.04-arm
          - ubuntu-22.04-arm
          # Legacy
          - macos-13
          # M1 CPU
          - macos-14
          - macos-15
          - macos-26
          # Windows
          - windows-2025
          - windows-2022
          # Windows ARM
          - windows-11-arm
    steps:
      - uses: actions/checkout@v4

      - name: Run setup-postgis
        uses: ./
        id: postgres

      - name: Test PostGIS with connection URI
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();' '${{ steps.postgres.outputs.connection-uri }}'

      - name: Test PostGIS with service name
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();'
        env:
          PGSERVICE: ${{ steps.postgres.outputs.service-name }}


  parametrized:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run setup-postgis
        uses: ./
        with:
          username: yoda
          password: GrandMaster
          database: jedi_order
          port: 34837
          postgres-version: 15
          postgis_version: 3.5.0
        id: postgres

      - name: Test PostGIS with connection URI
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();' '${{ steps.postgres.outputs.connection-uri }}'

      - name: Test PostGIS with service name
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();'
        env:
          PGSERVICE: ${{ steps.postgres.outputs.service-name }}

      - name: Verify PostGIS 3.5.0 installation on Windows
        if: matrix.os == 'windows-latest'
        run: |
          psql -v ON_ERROR_STOP=1 -c "SELECT PostGIS_Full_Version();" "${{ steps.postgres.outputs.connection-uri }}" | findstr /C:"POSTGIS=3.5.0 3.5.0"

      - name: Verify PostGIS 3.5.0 installation on macOS
        if: matrix.os == 'macos-latest'
        run: |
          psql -v ON_ERROR_STOP=1 -c "SELECT PostGIS_Full_Version();" "${{ steps.postgres.outputs.connection-uri }}" | grep "3.5.0"
        