name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 8 * * SUN"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  default:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-20.04
          - macos-latest
          # - macos-11  # Some build issues, and it takes 4hr+ to build dependencies. Not worthy.
          - macos-12
          - macos-13
          - macos-14  # M1 CPU
          - windows-latest
          - windows-2019
          - windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Run setup-postgis
        uses: ./
        id: postgres

      - name: Test PostGIS with connection URI
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();' '${{ steps.postgres.outputs.connection-uri }}'

      - name: Test PostGIS with service name
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();'
        env:
          PGSERVICE: ${{ steps.postgres.outputs.service-name }}


  parametrized:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run setup-postgis
        uses: ./
        with:
          username: yoda
          password: GrandMaster
          database: jedi_order
          port: 34837
        id: postgres

      - name: Test PostGIS with connection URI
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();' '${{ steps.postgres.outputs.connection-uri }}'

      - name: Test PostGIS with service name
        run: psql -v ON_ERROR_STOP=1 -c 'SELECT PostGIS_Full_Version();'
        env:
          PGSERVICE: ${{ steps.postgres.outputs.service-name }}
